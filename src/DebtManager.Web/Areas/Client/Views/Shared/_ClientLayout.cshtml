@{
    var themeName = ViewBag.ThemeName as string ?? "Default";
    var theme = Context.Items[DebtManager.Web.Services.BrandingResolverMiddleware.ThemeItemKey] as DebtManager.Web.Services.BrandingTheme;
    var primaryColor = theme?.PrimaryColorHex ?? "#0ea5e9";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Client Portal - @themeName</title>
    <link rel="stylesheet" href="/css/site.css" />
    <style>
        .brand-primary-bg { background-color: @primaryColor; }
        .brand-primary-text { color: @primaryColor; }
        .brand-primary-border { border-color: @primaryColor; }
    </style>
    <script>
        // Dark mode toggle
        if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark')
        } else {
            document.documentElement.classList.remove('dark')
        }
        
        function toggleDarkMode() {
            if (document.documentElement.classList.contains('dark')) {
                document.documentElement.classList.remove('dark');
                localStorage.theme = 'light';
            } else {
                document.documentElement.classList.add('dark');
                localStorage.theme = 'dark';
            }
        }
        
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('-translate-x-full');
        }
    </script>
</head>
<body class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <div class="flex h-screen">
        <!-- Mobile Overlay -->
        <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-20 md:hidden hidden" onclick="toggleSidebar()"></div>
        
        <!-- Sidebar -->
        <aside id="sidebar" class="fixed md:static w-64 brand-primary-bg dark:bg-gray-800 text-white flex flex-col z-30 h-full transform -translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out">
            <div class="p-4 border-b border-white border-opacity-20 dark:border-gray-700">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-xl font-bold">Client Portal</h1>
                        <p class="text-sm text-white text-opacity-80 dark:text-gray-400">@themeName</p>
                    </div>
                    <button onclick="toggleSidebar()" class="md:hidden p-1 rounded hover:bg-white hover:bg-opacity-10">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
            </div>
            <nav class="flex-1 overflow-y-auto p-4">
                <div class="space-y-1">
                    <a href="/Client" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                            </svg>
                            Dashboard
                        </span>
                    </a>
                    
                    <div class="pt-4 pb-2">
                        <h3 class="px-3 text-xs font-semibold text-white text-opacity-60 uppercase tracking-wider">Management</h3>
                    </div>
                    
                    <a href="/Client/Debts" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Debts" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            My Debts
                        </span>
                    </a>
                    
                    <a href="/Client/Organization" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Organization" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                            </svg>
                            Organization Profile
                        </span>
                    </a>
                    
                    <a href="/Client/DelegatedAccess" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "DelegatedAccess" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                            </svg>
                            Delegated Access
                        </span>
                    </a>
                    
                    <div class="pt-4 pb-2">
                        <h3 class="px-3 text-xs font-semibold text-white text-opacity-60 uppercase tracking-wider">Settings</h3>
                    </div>
                    
                    <a href="/Client/Branding" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Branding" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01" />
                            </svg>
                            Branding
                        </span>
                    </a>
                    
                    <div class="pt-4 pb-2">
                        <h3 class="px-3 text-xs font-semibold text-white text-opacity-60 uppercase tracking-wider">Operations</h3>
                    </div>
                    
                    <a href="/Client/Receipts" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Receipts" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                            </svg>
                            Receipts
                        </span>
                    </a>
                    
                    <a href="/Client/Communications" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Communications" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                            </svg>
                            Communications
                            @await Component.InvokeAsync("UnreadBadge")
                        </span>
                    </a>
                    
                    <a href="/Client/Audit" class="block px-3 py-2 rounded hover:bg-white hover:bg-opacity-10 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Audit" ? "bg-white bg-opacity-20" : "")">
                        <span class="flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                            </svg>
                            Audit Log
                        </span>
                    </a>
                </div>
            </nav>
            <div class="p-4 border-t border-white border-opacity-20 dark:border-gray-700">
                @if (User?.Identity?.IsAuthenticated ?? false)
                {
                    <div class="flex items-center">
                        <div class="flex-1">
                            <p class="text-sm font-medium">@User.Identity!.Name</p>
                            <p class="text-xs text-white text-opacity-70 dark:text-gray-400">Client</p>
                        </div>
                        <a href="/Account/SignOutUser" class="text-white text-opacity-70 hover:text-white dark:text-gray-400 dark:hover:text-white">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                            </svg>
                        </a>
                    </div>
                }
                else
                {
                    <a href="/Account/SignInClient" class="block text-center bg-white bg-opacity-20 hover:bg-opacity-30 px-4 py-2 rounded">
                        Sign In
                    </a>
                }
            </div>
        </aside>
        
        <!-- Main Content -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <!-- Top Bar -->
            <header class="bg-white dark:bg-gray-800 border-b dark:border-gray-700 px-4 md:px-6 py-4">
                <div class="flex items-center justify-between">
                    <div class="flex items-center gap-4">
                        <button onclick="toggleSidebar()" class="md:hidden p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700">
                            <svg class="w-6 h-6 text-gray-800 dark:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                        <h2 class="text-lg md:text-xl font-semibold text-gray-800 dark:text-white">@ViewBag.Title</h2>
                    </div>
                    <div class="flex items-center space-x-2 md:space-x-4">
                        <button onclick="toggleDarkMode()" class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700" title="Toggle dark mode">
                            <svg class="w-5 h-5 dark:hidden text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                            </svg>
                            <svg class="w-5 h-5 hidden dark:block text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                            </svg>
                        </button>
                        <a href="/health/live" class="hidden sm:block text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white">Health</a>
                        <a href="/" class="hidden sm:block text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white">Public Site</a>
                    </div>
                </div>
            </header>
            
            <!-- Main Content Area -->
            <main class="flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900 p-4 md:p-6">
                @RenderBody()
            </main>
        </div>
    </div>
    <script>
        // Handle sidebar overlay toggle
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('sidebar-overlay');
        
        function toggleSidebar() {
            sidebar.classList.toggle('-translate-x-full');
            overlay.classList.toggle('hidden');
        }
    </script>
</body>
</html>
