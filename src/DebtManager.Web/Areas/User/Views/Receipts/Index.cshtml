@using DebtManager.Web.Services
@model DebtManager.Web.Areas.User.Controllers.ReceiptsIndexVm
@{
    Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
    var theme = Context.Items[BrandingResolverMiddleware.ThemeItemKey] as BrandingTheme;
    var search = ViewBag.Search as string ?? string.Empty;
    var fromValue = ViewBag.From is DateTime fromDt ? fromDt.ToString("yyyy-MM-dd") : string.Empty;
    var toValue = ViewBag.To is DateTime toDt ? toDt.ToString("yyyy-MM-dd") : string.Empty;
}

<div class="space-y-6">
    @await Html.PartialAsync("~/Views/Shared/Partials/_TenantIdentity.cshtml", theme)

    <div class="app-surface">
        <div class="app-surface-header flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
            <div>
                <h3 class="text-lg font-semibold">Payment Receipts</h3>
                <p class="text-sm text-slate-500 dark:text-slate-300">Download official acknowledgements for every successful payment.</p>
            </div>
            <form method="get" class="flex flex-col sm:flex-row gap-2 sm:items-center text-sm">
                <input type="text" name="search" value="@search" placeholder="Debt reference" class="w-full sm:w-44" />
                <input type="date" name="from" value="@fromValue" class="w-full sm:w-40" />
                <input type="date" name="to" value="@toValue" class="w-full sm:w-40" />
                <button class="btn" type="submit">Filter</button>
            </form>
        </div>

        <div class="overflow-x-auto">
            <table class="app-table">
                <thead>
                    <tr>
                        <th>Receipt #</th>
                        <th>Date</th>
                        <th>Debt Reference</th>
                        <th>Amount</th>
                        <th>Payment Method</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Items.Count == 0)
                    {
                        <tr>
                            <td colspan="6" class="px-6 py-8 text-center text-sm text-slate-500 dark:text-slate-300">No receipts found for the selected filters.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var r in Model.Items)
                        {
                            <tr>
                                <td class="font-semibold text-slate-900 dark:text-slate-100">#@r.ReceiptNumber</td>
                                <td class="text-slate-500 dark:text-slate-300">@r.ProcessedAtUtc.ToLocalTime()</td>
                                <td class="text-slate-600 dark:text-slate-200">@r.DebtReference</td>
                                <td class="font-semibold text-slate-900 dark:text-slate-100">@r.Currency @r.Amount.ToString("N2")</td>
                                <td class="text-slate-500 dark:text-slate-300">@r.Method</td>
                                <td class="flex items-center gap-3 py-4">
                                    <a href="/User/Receipts/View/@r.Id" class="app-link text-sm">View</a>
                                    <a href="/User/Receipts/Download/@r.Id" class="text-sm text-green-600 hover:underline dark:text-green-400">Download</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <div class="app-surface-compact flex flex-col gap-3 md:flex-row md:items-center md:justify-between border-t border-gray-200 dark:border-gray-700">
            <div class="text-sm text-slate-600 dark:text-slate-300">
                @{
                    var fromIndex = (Model.Total == 0) ? 0 : ((Model.Page - 1) * Model.PageSize) + 1;
                    var toIndex = Math.Min(Model.Page * Model.PageSize, Model.Total);
                }
                Showing <span class="font-medium text-slate-900 dark:text-slate-100">@fromIndex</span> to <span class="font-medium text-slate-900 dark:text-slate-100">@toIndex</span> of <span class="font-medium text-slate-900 dark:text-slate-100">@Model.Total</span> results
            </div>
            <div class="flex items-center gap-2">
                @{
                    var prevDisabled = Model.Page <= 1;
                    var nextDisabled = (Model.Page * Model.PageSize) >= Model.Total;
                    string BuildLink(int targetPage) => $"?page={targetPage}&pageSize={Model.PageSize}&search={search}&from={fromValue}&to={toValue}";
                }
                <a class="btn-outline text-sm @(prevDisabled ? "pointer-events-none opacity-60" : string.Empty)" href="@(prevDisabled ? "#" : BuildLink(Model.Page - 1))">Previous</a>
                <span class="btn text-sm cursor-default">@Model.Page</span>
                <a class="btn-outline text-sm @(nextDisabled ? "pointer-events-none opacity-60" : string.Empty)" href="@(nextDisabled ? "#" : BuildLink(Model.Page + 1))">Next</a>
            </div>
        </div>
    </div>
</div>

