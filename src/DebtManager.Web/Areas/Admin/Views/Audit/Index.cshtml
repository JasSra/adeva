@model IEnumerable<DebtManager.Domain.Audit.AuditLog>
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var page = (int)ViewBag.Page;
    var pageSize = (int)ViewBag.PageSize;
    var totalCount = (int)ViewBag.TotalCount;
    var totalPages = (int)ViewBag.TotalPages;
}

<form method="get" action="@Url.Action("Index")" class="bg-white rounded-lg shadow">
    <div class="p-6 border-b flex items-center justify-between">
        <h3 class="text-lg font-semibold">Audit Log</h3>
        <div class="flex gap-2">
            <select name="entity" class="border rounded px-3 py-2 text-sm">
                <option value="">All Entities</option>
                <option value="Account" @(ViewBag.Entity == "Account" ? "selected" : "")>Accounts</option>
                <option value="Application" @(ViewBag.Entity == "Application" ? "selected" : "")>Applications</option>
                <option value="Organization" @(ViewBag.Entity == "Organization" ? "selected" : "")>Organizations</option>
                <option value="Debt" @(ViewBag.Entity == "Debt" ? "selected" : "")>Debts</option>
                <option value="Debtor" @(ViewBag.Entity == "Debtor" ? "selected" : "")>Debtors</option>
                <option value="Transaction" @(ViewBag.Entity == "Transaction" ? "selected" : "")>Transactions</option>
                <option value="Payment" @(ViewBag.Entity == "Payment" ? "selected" : "")>Payments</option>
                <option value="Configuration" @(ViewBag.Entity == "Configuration" ? "selected" : "")>Configuration</option>
            </select>
            <input type="date" name="fromDate" value="@(ViewBag.FromDate != null ? ((DateTime)ViewBag.FromDate).ToString("yyyy-MM-dd") : "")" class="border rounded px-3 py-2 text-sm" />
            <input type="date" name="toDate" value="@(ViewBag.ToDate != null ? ((DateTime)ViewBag.ToDate).ToString("yyyy-MM-dd") : "")" class="border rounded px-3 py-2 text-sm" />
            <input type="text" name="search" value="@ViewBag.Search" placeholder="Search..." class="border rounded px-3 py-2 text-sm" />
            <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm">Filter</button>
            @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
            {
                <a href="@Url.Action("Index")" class="px-4 py-2 border rounded text-sm hover:bg-gray-100">Clear</a>
            }
        </div>
    </div>
</form>

<div class="bg-white rounded-lg shadow mt-4">
    <div class="overflow-x-auto">
        <table class="w-full">
            <thead class="bg-gray-50 border-b">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Timestamp</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Entity</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Details</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">IP Address</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model != null && Model.Any())
                {
                    @foreach (var log in Model)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                @log.CreatedAtUtc.ToString("yyyy-MM-dd HH:mm:ss")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <div class="font-medium">@log.UserEmail</div>
                                @if (!string.IsNullOrEmpty(log.UserId))
                                {
                                    <div class="text-xs text-gray-500">@log.UserId.Substring(0, Math.Min(8, log.UserId.Length))...</div>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                @{
                                    var badgeClass = log.Action.Contains("CREATE") ? "bg-green-100 text-green-800" :
                                                    log.Action.Contains("UPDATE") || log.Action.Contains("EDIT") ? "bg-blue-100 text-blue-800" :
                                                    log.Action.Contains("DELETE") || log.Action.Contains("REJECT") ? "bg-red-100 text-red-800" :
                                                    log.Action.Contains("APPROVE") ? "bg-green-100 text-green-800" :
                                                    log.Action.Contains("VIEW") ? "bg-gray-100 text-gray-800" :
                                                    "bg-purple-100 text-purple-800";
                                }
                                <span class="px-2 py-1 text-xs rounded-full @badgeClass">@log.Action.Replace("_", " ")</span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <div class="font-medium">@log.EntityType</div>
                                @if (!string.IsNullOrEmpty(log.EntityId))
                                {
                                    <div class="text-xs text-gray-500">ID: @log.EntityId.Substring(0, Math.Min(8, log.EntityId.Length))...</div>
                                }
                            </td>
                            <td class="px-6 py-4 text-sm max-w-xs truncate" title="@log.Details">
                                @(log.Details ?? "-")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                @(log.IpAddress ?? "-")
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">
                            @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                            {
                                <text>No audit log entries found matching your filters.</text>
                            }
                            else
                            {
                                <text>No audit log entries available yet.</text>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    @if (totalPages > 0)
    {
        <div class="p-4 border-t bg-gray-50 flex items-center justify-between">
            <div class="text-sm text-gray-600">
                Showing @((page - 1) * pageSize + 1) to @Math.Min(page * pageSize, totalCount) of @totalCount entries
            </div>
            <div class="flex gap-1">
                @if (page > 1)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = page - 1, pageSize })" class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">Previous</a>
                }
                else
                {
                    <button disabled class="px-3 py-1 border rounded text-sm bg-gray-100 text-gray-400 cursor-not-allowed">Previous</button>
                }
                
                @for (int i = Math.Max(1, page - 2); i <= Math.Min(totalPages, page + 2); i++)
                {
                    if (i == page)
                    {
                        <button class="px-3 py-1 border rounded text-sm bg-blue-600 text-white">@i</button>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = i, pageSize })" class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">@i</a>
                    }
                }
                
                @if (page < totalPages)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = page + 1, pageSize })" class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">Next</a>
                }
                else
                {
                    <button disabled class="px-3 py-1 border rounded text-sm bg-gray-100 text-gray-400 cursor-not-allowed">Next</button>
                }
            </div>
        </div>
    }
</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">Debtor</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">#1025</td>
                    <td class="px-6 py-4 text-sm">Created new debtor record</td>
                </tr>
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">2024-01-15 11:45:23</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">system</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <span class="px-2 py-1 text-xs rounded-full bg-yellow-100 text-yellow-800">PROCESS</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">Transaction</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm">#T-5678</td>
                    <td class="px-6 py-4 text-sm">Automated payment processed</td>
                </tr>
            </tbody>
        </table>
    </div>
    
    <div class="p-4 border-t bg-gray-50 flex items-center justify-between">
        <div class="text-sm text-gray-600">
            Showing 1 to 3 of 1,234 entries
        </div>
        <div class="flex gap-1">
            <button class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">Previous</button>
            <button class="px-3 py-1 border rounded text-sm bg-blue-600 text-white">1</button>
            <button class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">2</button>
            <button class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">3</button>
            <button class="px-3 py-1 border rounded text-sm bg-white hover:bg-gray-100">Next</button>
        </div>
    </div>
</div>
