@model IEnumerable<DebtManager.Domain.Audit.AuditLog>
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var page = (int)ViewBag.Page;
    var pageSize = (int)ViewBag.PageSize;
    var totalCount = (int)ViewBag.TotalCount;
    var totalPages = (int)ViewBag.TotalPages;
}

<form method="get" action="@Url.Action("Index")" class="bg-white rounded-lg shadow mb-4">
    <div class="p-4 md:p-6 border-b">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
            <h3 class="text-lg font-semibold flex items-center">
                <svg class="w-5 h-5 mr-2 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                Audit Log
            </h3>
            <div class="flex flex-wrap gap-2">
                <select name="entity" class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="">All Entities</option>
                    <option value="Account" @(ViewBag.Entity == "Account" ? "selected" : "")>Accounts</option>
                    <option value="Application" @(ViewBag.Entity == "Application" ? "selected" : "")>Applications</option>
                    <option value="Organization" @(ViewBag.Entity == "Organization" ? "selected" : "")>Organizations</option>
                    <option value="Debt" @(ViewBag.Entity == "Debt" ? "selected" : "")>Debts</option>
                    <option value="Debtor" @(ViewBag.Entity == "Debtor" ? "selected" : "")>Debtors</option>
                    <option value="Transaction" @(ViewBag.Entity == "Transaction" ? "selected" : "")>Transactions</option>
                    <option value="Payment" @(ViewBag.Entity == "Payment" ? "selected" : "")>Payments</option>
                    <option value="Configuration" @(ViewBag.Entity == "Configuration" ? "selected" : "")>Configuration</option>
                </select>
                <input type="date" name="fromDate" value="@(ViewBag.FromDate != null ? ((DateTime)ViewBag.FromDate).ToString("yyyy-MM-dd") : "")" 
                       class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
                       placeholder="From Date" />
                <input type="date" name="toDate" value="@(ViewBag.ToDate != null ? ((DateTime)ViewBag.ToDate).ToString("yyyy-MM-dd") : "")" 
                       class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
                       placeholder="To Date" />
                <input type="text" name="search" value="@ViewBag.Search" placeholder="Search..." 
                       class="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full md:w-auto" />
                <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm font-medium transition-colors flex items-center">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    Filter
                </button>
                @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                {
                    <a href="@Url.Action("Index")" class="px-4 py-2 border border-gray-300 rounded-lg text-sm hover:bg-gray-100 transition-colors flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                        Clear
                    </a>
                }
            </div>
        </div>
    </div>
</form>

<div class="bg-white rounded-lg shadow">
    <div class="overflow-x-auto">
        <table class="w-full">
            <thead class="bg-gray-50 border-b">
                <tr>
                    <th class="px-4 md:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Timestamp</th>
                    <th class="px-4 md:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                    <th class="px-4 md:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
                    <th class="px-4 md:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Entity</th>
                    <th class="px-4 md:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Details</th>
                    <th class="px-4 md:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">IP Address</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model != null && Model.Any())
                {
                    @foreach (var log in Model)
                    {
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-4 md:px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <div class="flex items-center">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <div>
                                        <div class="font-medium">@log.CreatedAtUtc.ToString("yyyy-MM-dd")</div>
                                        <div class="text-xs text-gray-500">@log.CreatedAtUtc.ToString("HH:mm:ss")</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-4 md:px-6 py-4 whitespace-nowrap text-sm">
                                <div class="flex items-center">
                                    <div class="flex-shrink-0 h-8 w-8 bg-gray-200 rounded-full flex items-center justify-center">
                                        <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                        </svg>
                                    </div>
                                    <div class="ml-3">
                                        <div class="font-medium text-gray-900">@log.UserEmail</div>
                                        @if (!string.IsNullOrEmpty(log.UserId))
                                        {
                                            <div class="text-xs text-gray-500">ID: @log.UserId.Substring(0, Math.Min(8, log.UserId.Length))...</div>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="px-4 md:px-6 py-4 whitespace-nowrap text-sm">
                                @{
                                    var badgeClass = log.Action.Contains("CREATE") ? "bg-green-100 text-green-800 border-green-200" :
                                                    log.Action.Contains("UPDATE") || log.Action.Contains("EDIT") ? "bg-blue-100 text-blue-800 border-blue-200" :
                                                    log.Action.Contains("DELETE") || log.Action.Contains("REJECT") ? "bg-red-100 text-red-800 border-red-200" :
                                                    log.Action.Contains("APPROVE") ? "bg-green-100 text-green-800 border-green-200" :
                                                    log.Action.Contains("VIEW") ? "bg-gray-100 text-gray-800 border-gray-200" :
                                                    "bg-purple-100 text-purple-800 border-purple-200";
                                }
                                <span class="px-2 py-1 text-xs rounded-full font-semibold border @badgeClass">@log.Action.Replace("_", " ")</span>
                            </td>
                            <td class="px-4 md:px-6 py-4 whitespace-nowrap text-sm">
                                <div class="font-medium text-gray-900">@log.EntityType</div>
                                @if (!string.IsNullOrEmpty(log.EntityId))
                                {
                                    <div class="text-xs text-gray-500">ID: @log.EntityId.Substring(0, Math.Min(8, log.EntityId.Length))...</div>
                                }
                            </td>
                            <td class="px-4 md:px-6 py-4 text-sm max-w-xs">
                                <div class="truncate text-gray-900" title="@log.Details">
                                    @(log.Details ?? "-")
                                </div>
                            </td>
                            <td class="px-4 md:px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <div class="flex items-center">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                                    </svg>
                                    @(log.IpAddress ?? "-")
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="px-4 md:px-6 py-12 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                            </svg>
                            <p class="mt-2 text-sm text-gray-500">
                                @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                                {
                                    <text>No audit log entries found matching your filters.</text>
                                }
                                else
                                {
                                    <text>No audit log entries available yet.</text>
                                }
                            </p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    @if (totalPages > 0)
    {
        <div class="p-4 border-t bg-gray-50 flex flex-col sm:flex-row items-center justify-between gap-3">
            <div class="text-sm text-gray-600">
                Showing <span class="font-medium">@((page - 1) * pageSize + 1)</span> to <span class="font-medium">@Math.Min(page * pageSize, totalCount)</span> of <span class="font-medium">@totalCount</span> entries
            </div>
            <nav class="flex gap-1" aria-label="Pagination">
                @if (page > 1)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = page - 1, pageSize })" 
                       class="px-3 py-2 border border-gray-300 rounded-lg text-sm bg-white hover:bg-gray-100 transition-colors flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                        </svg>
                        Previous
                    </a>
                }
                else
                {
                    <button disabled class="px-3 py-2 border border-gray-300 rounded-lg text-sm bg-gray-100 text-gray-400 cursor-not-allowed flex items-center">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                        </svg>
                        Previous
                    </button>
                }
                
                @for (int i = Math.Max(1, page - 2); i <= Math.Min(totalPages, page + 2); i++)
                {
                    if (i == page)
                    {
                        <button class="px-3 py-2 border border-blue-500 rounded-lg text-sm bg-blue-600 text-white font-medium shadow-sm">@i</button>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = i, pageSize })" 
                           class="px-3 py-2 border border-gray-300 rounded-lg text-sm bg-white hover:bg-gray-100 transition-colors">@i</a>
                    }
                }
                
                @if (page < totalPages)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = page + 1, pageSize })" 
                       class="px-3 py-2 border border-gray-300 rounded-lg text-sm bg-white hover:bg-gray-100 transition-colors flex items-center">
                        Next
                        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                    </a>
                }
                else
                {
                    <button disabled class="px-3 py-2 border border-gray-300 rounded-lg text-sm bg-gray-100 text-gray-400 cursor-not-allowed flex items-center">
                        Next
                        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                    </button>
                }
            </nav>
        </div>
    }
</div>
