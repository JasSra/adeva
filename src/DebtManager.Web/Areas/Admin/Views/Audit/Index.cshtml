@model IEnumerable<DebtManager.Domain.Audit.AuditLog>
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var page = (int)ViewBag.Page;
    var pageSize = (int)ViewBag.PageSize;
    var totalCount = (int)ViewBag.TotalCount;
    var totalPages = (int)ViewBag.TotalPages;
}

<!-- Page Header -->
<div class="mb-6">
    <h1 class="text-3xl font-bold text-gray-900">Audit Log</h1>
    <p class="text-sm text-gray-600 mt-2">Comprehensive tracking of all system activities and changes</p>
</div>

<!-- Filter Panel -->
<form method="get" action="@Url.Action("Index")" class="bg-white rounded-xl shadow-sm border border-gray-200 mb-6">
    <div class="p-6 border-b border-gray-200">
        <div class="flex items-center justify-between mb-4">
            <div class="flex items-center space-x-2">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                </svg>
                <h3 class="text-base font-semibold text-gray-900">Filter Audit Records</h3>
            </div>
            @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
            {
                <span class="text-xs text-gray-600 bg-blue-50 px-2 py-1 rounded">Filters Active</span>
            }
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-3">
            <div>
                <label class="block text-xs font-medium text-gray-700 mb-1">Entity Type</label>
                <select name="entity" class="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="">All Entities</option>
                    <option value="Account" @(ViewBag.Entity == "Account" ? "selected" : "")>Accounts</option>
                    <option value="Application" @(ViewBag.Entity == "Application" ? "selected" : "")>Applications</option>
                    <option value="Organization" @(ViewBag.Entity == "Organization" ? "selected" : "")>Organizations</option>
                    <option value="Debt" @(ViewBag.Entity == "Debt" ? "selected" : "")>Debts</option>
                    <option value="Debtor" @(ViewBag.Entity == "Debtor" ? "selected" : "")>Debtors</option>
                    <option value="Transaction" @(ViewBag.Entity == "Transaction" ? "selected" : "")>Transactions</option>
                    <option value="Payment" @(ViewBag.Entity == "Payment" ? "selected" : "")>Payments</option>
                    <option value="Configuration" @(ViewBag.Entity == "Configuration" ? "selected" : "")>Configuration</option>
                </select>
            </div>
            
            <div>
                <label class="block text-xs font-medium text-gray-700 mb-1">From Date</label>
                <input type="date" name="fromDate" value="@(ViewBag.FromDate != null ? ((DateTime)ViewBag.FromDate).ToString("yyyy-MM-dd") : "")" 
                       class="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
            </div>
            
            <div>
                <label class="block text-xs font-medium text-gray-700 mb-1">To Date</label>
                <input type="date" name="toDate" value="@(ViewBag.ToDate != null ? ((DateTime)ViewBag.ToDate).ToString("yyyy-MM-dd") : "")" 
                       class="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
            </div>
            <div>
                <label class="block text-xs font-medium text-gray-700 mb-1">Entity Id (optional)</label>
                <input type="text" name="entityId" value="@ViewBag.EntityId" placeholder="Filter by entity id" 
                       class="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
            </div>
            
            <div>
                <label class="block text-xs font-medium text-gray-700 mb-1">Search</label>
                <input type="text" name="search" value="@ViewBag.Search" placeholder="User, IP, details..." 
                       class="w-full border border-gray-300 rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
            </div>
            
            <div class="flex items-end space-x-2">
                <button type="submit" class="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm font-medium transition-colors flex items-center justify-center">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    Apply
                </button>
                @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                {
                    <a href="@Url.Action("Index")" class="px-4 py-2 border border-gray-300 rounded-lg text-sm hover:bg-gray-100 transition-colors flex items-center">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </a>
                }
            </div>
        </div>
    </div>
</form>

<!-- Audit Records Table -->
<div class="bg-white rounded-xl shadow-sm border border-gray-200">
    <div class="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
        <div>
            <h3 class="text-base font-semibold text-gray-900">Audit Records</h3>
            @if (totalCount > 0)
            {
                <p class="text-sm text-gray-600 mt-1">Showing @((page - 1) * pageSize + 1)-@Math.Min(page * pageSize, totalCount) of @totalCount.ToString("N0") total records</p>
            }
        </div>
    </div>
    
    <div class="overflow-x-auto">
        <table class="w-full">
            <thead class="bg-gray-50 border-b border-gray-200">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Timestamp</th>
                    <th class="px-6 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">User</th>
                    <th class="px-6 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Action</th>
                    <th class="px-6 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Entity</th>
                    <th class="px-6 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Details</th>
                    <th class="px-6 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Source IP</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-100">
                @if (Model != null && Model.Any())
                {
                    @foreach (var log in Model)
                    {
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center text-sm">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <div>
                                        <div class="font-medium text-gray-900">@log.CreatedAtUtc.ToString("MMM dd, yyyy")</div>
                                        <div class="text-xs text-gray-500">@log.CreatedAtUtc.ToString("HH:mm:ss")</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="flex-shrink-0 h-9 w-9 bg-gradient-to-br from-blue-100 to-indigo-100 rounded-full flex items-center justify-center">
                                        <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                        </svg>
                                    </div>
                                    <div class="ml-3">
                                        <div class="text-sm font-medium text-gray-900">@log.UserEmail</div>
                                        @if (!string.IsNullOrEmpty(log.UserId))
                                        {
                                            <div class="text-xs text-gray-500">@log.UserId.Substring(0, Math.Min(8, log.UserId.Length))...</div>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @{
                                    var (badgeClass, iconPath) = log.Action.ToUpper() switch
                                    {
                                        var a when a.Contains("CREATE") => ("bg-emerald-100 text-emerald-800 border-emerald-200", "M12 4v16m8-8H4"),
                                        var a when a.Contains("UPDATE") || a.Contains("EDIT") => ("bg-blue-100 text-blue-800 border-blue-200", "M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"),
                                        var a when a.Contains("DELETE") || a.Contains("REJECT") => ("bg-red-100 text-red-800 border-red-200", "M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"),
                                        var a when a.Contains("APPROVE") => ("bg-green-100 text-green-800 border-green-200", "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"),
                                        var a when a.Contains("VIEW") => ("bg-gray-100 text-gray-800 border-gray-200", "M15 12a3 3 0 11-6 0 3 3 0 016 0z"),
                                        _ => ("bg-purple-100 text-purple-800 border-purple-200", "M13 10V3L4 14h7v7l9-11h-7z")
                                    };
                                }
                                <span class="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-semibold border @badgeClass">
                                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="@iconPath" />
                                    </svg>
                                    @log.Action.Replace("_", " ")
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm">
                                    <div class="font-medium text-gray-900">@log.EntityType</div>
                                    @if (!string.IsNullOrEmpty(log.EntityId))
                                    {
                                        <div class="text-xs text-gray-500 font-mono">@log.EntityId.Substring(0, Math.Min(8, log.EntityId.Length))...</div>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4 max-w-xs">
                                <div class="text-sm text-gray-900 truncate" title="@log.Details">
                                    @if (!string.IsNullOrEmpty(log.Details))
                                    {
                                        <text>@log.Details</text>
                                    }
                                    else
                                    {
                                        <span class="text-gray-400 italic">No details</span>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                @if (!string.IsNullOrEmpty(log.IpAddress))
                                {
                                    <div class="flex items-center text-gray-600">
                                        <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                                        </svg>
                                        <span class="font-mono text-xs">@log.IpAddress</span>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-gray-400">-</span>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="px-6 py-16 text-center">
                            <div class="flex flex-col items-center justify-center">
                                <div class="bg-gray-100 rounded-full p-6 mb-4">
                                    <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                    </svg>
                                </div>
                                <h3 class="text-lg font-semibold text-gray-900 mb-2">No Audit Records Found</h3>
                                <p class="text-sm text-gray-600 max-w-md">
                                    @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                                    {
                                        <text>No audit entries match your current filters. Try adjusting your search criteria or clearing the filters.</text>
                                    }
                                    else
                                    {
                                        <text>No audit entries have been recorded yet. System activities will appear here as they occur.</text>
                                    }
                                </p>
                                @if (!string.IsNullOrEmpty(ViewBag.Search as string) || !string.IsNullOrEmpty(ViewBag.Entity as string) || ViewBag.FromDate != null || ViewBag.ToDate != null)
                                {
                                    <a href="@Url.Action("Index")" class="mt-4 inline-flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                        </svg>
                                        Clear All Filters
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    @if (totalPages > 0)
    {
        <div class="px-6 py-4 border-t border-gray-200 bg-gray-50 flex flex-col sm:flex-row items-center justify-between gap-4">
            <div class="text-sm text-gray-700">
                Displaying records <span class="font-semibold text-gray-900">@((page - 1) * pageSize + 1)</span> to <span class="font-semibold text-gray-900">@Math.Min(page * pageSize, totalCount)</span> of <span class="font-semibold text-gray-900">@totalCount.ToString("N0")</span>
            </div>
            <nav class="flex items-center space-x-1" aria-label="Pagination">
                @if (page > 1)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = page - 1, pageSize })" 
                       class="inline-flex items-center px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors">
                        <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                        </svg>
                        Previous
                    </a>
                }
                else
                {
                    <button disabled class="inline-flex items-center px-3 py-2 border border-gray-200 rounded-lg text-sm font-medium text-gray-400 bg-gray-100 cursor-not-allowed">
                        <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                        </svg>
                        Previous
                    </button>
                }
                
                <div class="hidden sm:flex items-center space-x-1">
                    @for (int i = Math.Max(1, page - 2); i <= Math.Min(totalPages, page + 2); i++)
                    {
                        if (i == page)
                        {
                            <button class="inline-flex items-center justify-center w-10 h-10 border-2 border-blue-600 rounded-lg text-sm font-bold bg-blue-600 text-white shadow-sm">@i</button>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = i, pageSize })" 
                               class="inline-flex items-center justify-center w-10 h-10 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors">@i</a>
                        }
                    }
                </div>
                
                @if (page < totalPages)
                {
                    <a href="@Url.Action("Index", new { search = ViewBag.Search, entity = ViewBag.Entity, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, page = page + 1, pageSize })" 
                       class="inline-flex items-center px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 transition-colors">
                        Next
                        <svg class="w-4 h-4 ml-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                    </a>
                }
                else
                {
                    <button disabled class="inline-flex items-center px-3 py-2 border border-gray-200 rounded-lg text-sm font-medium text-gray-400 bg-gray-100 cursor-not-allowed">
                        Next
                        <svg class="w-4 h-4 ml-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                    </button>
                }
            </nav>
        </div>
    }
</div>
