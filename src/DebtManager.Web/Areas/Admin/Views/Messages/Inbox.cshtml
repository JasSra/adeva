@model DebtManager.Web.Areas.Admin.Controllers.InboxVm
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-6 flex items-center justify-between">
    <div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Inbox</h2>
        <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">Internal messages and notifications</p>
    </div>
    <div class="flex items-center gap-2">
        @if (Model.UnreadCount > 0)
        {
            <span class="px-3 py-1 bg-red-600 text-white text-sm font-semibold rounded-full">
                @Model.UnreadCount Unread
            </span>
        }
    </div>
</div>

<!-- Filters -->
<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4 mb-6">
    <form method="get" class="flex flex-wrap gap-3">
        <select name="status" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
            <option value="">All Status</option>
            <option value="Unread" selected="@(Model.StatusFilter == "Unread")">Unread</option>
            <option value="Read" selected="@(Model.StatusFilter == "Read")">Read</option>
            <option value="Archived" selected="@(Model.StatusFilter == "Archived")">Archived</option>
        </select>
        
        <select name="priority" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
            <option value="">All Priority</option>
            <option value="Low" selected="@(Model.PriorityFilter == "Low")">Low</option>
            <option value="Normal" selected="@(Model.PriorityFilter == "Normal")">Normal</option>
            <option value="High" selected="@(Model.PriorityFilter == "High")">High</option>
            <option value="Urgent" selected="@(Model.PriorityFilter == "Urgent")">Urgent</option>
        </select>
        
        <select name="category" class="border border-gray-300 dark:border-gray-600 rounded-lg px-3 py-2 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
            <option value="">All Categories</option>
            <option value="Client Onboarding" selected="@(Model.CategoryFilter == "Client Onboarding")">Client Onboarding</option>
            <option value="System Alert" selected="@(Model.CategoryFilter == "System Alert")">System Alert</option>
            <option value="Payment" selected="@(Model.CategoryFilter == "Payment")">Payment</option>
        </select>
        
        <button type="submit" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-medium">
            Apply Filters
        </button>
        
        <a href="/Admin/Messages/Inbox" class="px-4 py-2 bg-gray-200 dark:bg-gray-600 hover:bg-gray-300 dark:hover:bg-gray-500 text-gray-800 dark:text-white rounded-lg text-sm font-medium">
            Clear
        </a>
    </form>
</div>

<!-- Messages List -->
<div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700">
    @if (Model.Messages.Any())
    {
        <div class="divide-y divide-gray-200 dark:divide-gray-700">
            @foreach (var message in Model.Messages)
            {
                var priorityClass = message.Priority switch
                {
                    DebtManager.Domain.Communications.MessagePriority.Urgent => "bg-red-100 dark:bg-red-900/30 border-l-4 border-red-500",
                    DebtManager.Domain.Communications.MessagePriority.High => "bg-orange-100 dark:bg-orange-900/30 border-l-4 border-orange-500",
                    DebtManager.Domain.Communications.MessagePriority.Normal => "hover:bg-gray-50 dark:hover:bg-gray-700/50",
                    _ => "hover:bg-gray-50 dark:hover:bg-gray-700/50"
                };
                
                var unreadClass = message.Status == DebtManager.Domain.Communications.InternalMessageStatus.Unread 
                    ? "bg-blue-50 dark:bg-blue-900/20" 
                    : "";

                <a href="/Admin/Messages/View/@message.Id" class="block p-4 @priorityClass @unreadClass transition-colors">
                    <div class="flex items-start justify-between">
                        <div class="flex-1 min-w-0">
                            <div class="flex items-center gap-2 mb-1">
                                @if (message.Status == DebtManager.Domain.Communications.InternalMessageStatus.Unread)
                                {
                                    <span class="flex-shrink-0 w-2 h-2 bg-blue-600 rounded-full"></span>
                                }
                                
                                <h3 class="text-sm font-semibold text-gray-900 dark:text-white truncate">
                                    @message.Title
                                </h3>
                                
                                @if (!string.IsNullOrEmpty(message.Category))
                                {
                                    <span class="px-2 py-0.5 text-xs rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300">
                                        @message.Category
                                    </span>
                                }
                                
                                @switch (message.Priority)
                                {
                                    case DebtManager.Domain.Communications.MessagePriority.Urgent:
                                        <span class="px-2 py-0.5 text-xs rounded-full bg-red-100 dark:bg-red-900/50 text-red-800 dark:text-red-200">
                                            Urgent
                                        </span>
                                        break;
                                    case DebtManager.Domain.Communications.MessagePriority.High:
                                        <span class="px-2 py-0.5 text-xs rounded-full bg-orange-100 dark:bg-orange-900/50 text-orange-800 dark:text-orange-200">
                                            High
                                        </span>
                                        break;
                                }
                            </div>
                            
                            <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-2 mt-1">
                                @(message.Content.Length > 150 ? message.Content.Substring(0, 150) + "..." : message.Content)
                            </p>
                            
                            <div class="flex items-center gap-4 mt-2 text-xs text-gray-500 dark:text-gray-400">
                                <span>@message.SentAtUtc.ToString("MMM dd, yyyy HH:mm")</span>
                                
                                @if (message.ReadAtUtc.HasValue)
                                {
                                    <span>Read: @message.ReadAtUtc.Value.ToString("MMM dd, HH:mm")</span>
                                }
                            </div>
                        </div>
                        
                        <div class="ml-4">
                            <svg class="w-5 h-5 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                            </svg>
                        </div>
                    </div>
                </a>
            }
        </div>
    }
    else
    {
        <div class="p-12 text-center">
            <svg class="w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
            </svg>
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">No Messages</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">You don't have any messages matching the current filters.</p>
        </div>
    }
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="mt-6 flex items-center justify-between">
        <div class="text-sm text-gray-700 dark:text-gray-300">
            Showing <span class="font-medium">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span> to 
            <span class="font-medium">@(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount))</span> of 
            <span class="font-medium">@Model.TotalCount</span> messages
        </div>
        
        <div class="flex gap-2">
            @if (Model.CurrentPage > 1)
            {
                <a href="?page=@(Model.CurrentPage - 1)&status=@Model.StatusFilter&priority=@Model.PriorityFilter&category=@Model.CategoryFilter" 
                   class="px-3 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600">
                    Previous
                </a>
            }
            
            @for (var i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
            {
                var activeClass = i == Model.CurrentPage ? "bg-blue-600 text-white" : "bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600";
                <a href="?page=@i&status=@Model.StatusFilter&priority=@Model.PriorityFilter&category=@Model.CategoryFilter" 
                   class="px-3 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm @activeClass">
                    @i
                </a>
            }
            
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <a href="?page=@(Model.CurrentPage + 1)&status=@Model.StatusFilter&priority=@Model.PriorityFilter&category=@Model.CategoryFilter" 
                   class="px-3 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600">
                    Next
                </a>
            }
        </div>
    </div>
}
