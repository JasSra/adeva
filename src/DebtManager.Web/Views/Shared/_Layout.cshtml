@using Microsoft.Extensions.Hosting
@inject Microsoft.Extensions.Hosting.IHostEnvironment Env
@{
    var themeName = ViewBag.ThemeName as string ?? "Default";
    var isAuth = User?.Identity?.IsAuthenticated ?? false;
    var userName = isAuth ? (User?.Identity?.Name ?? "Signed in") : null;
    var roles = new List<string>();
    if (isAuth)
    {
        if (User?.IsInRole("Admin") ?? false) roles.Add("Admin");
        if (User?.IsInRole("Client") ?? false) roles.Add("Client");
        if (User?.IsInRole("User") ?? false) roles.Add("User");
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Adeva Plus - @themeName</title>
    <link rel="stylesheet" href="/css/site.css" />
    <link rel="stylesheet" href="/css/brand.css" />
    @await Html.PartialAsync("~/Views/Shared/Partials/_ThemeScript.cshtml")
    <script>
        function toggleMobileMenu() {
            const menu = document.getElementById('mobile-menu');
            menu.classList.toggle('hidden');
        }
    </script>
</head>
<body class="min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <!-- Primary header -->
    <header class="bg-white dark:bg-gray-800 border-b dark:border-gray-700">
        <div class="container mx-auto px-4">
            <div class="flex items-center justify-between h-14">
                <div class="flex items-center">
                    @await Html.PartialAsync("~/Views/Shared/Partials/_BrandLogo.cshtml", new DebtManager.Web.Models.BrandLogoModel { Variant = "full", Size = "sm", AsLink = true, LinkHref = "/" })
                </div>
                <nav class="hidden md:flex items-center gap-5 text-sm">
                    <a href="/User" class="text-gray-700 dark:text-gray-200 hover:text-blue-700">My Debts</a>
                    <a href="/Client" class="text-gray-700 dark:text-gray-200 hover:text-blue-700">Client Portal</a>
                    <a href="/Admin" class="text-gray-700 dark:text-gray-200 hover:text-blue-700">Admin</a>
                    @* Keep primary nav clean: no auth/dev actions here *@
                </nav>
                <div class="md:hidden flex items-center gap-2">
                    <button data-unstyled onclick="toggleDarkMode()" class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700" title="Toggle dark mode">
                        <svg class="w-5 h-5 dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" /></svg>
                        <svg class="w-5 h-5 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" /></svg>
                    </button>
                    <button data-unstyled onclick="toggleMobileMenu()" class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" /></svg>
                    </button>
                </div>
            </div>
            <nav id="mobile-menu" class="mt-2 hidden md:hidden flex-col gap-2 pb-3">
                <a href="/User" class="py-1">My Debts</a>
                <a href="/Client" class="py-1">Client Portal</a>
                <a href="/Admin" class="py-1">Admin</a>
                @if (Env.IsDevelopment()) { <a href="/Dev/Login?fake=true" class="py-1">Dev Admin</a> }
            </nav>
        </div>
        <!-- Context bar below header -->
        <div class="bg-slate-50 dark:bg-gray-700/60 border-t dark:border-gray-700">
            <div class="container mx-auto px-4 h-10 flex items-center justify-between text-sm">
                <div class="flex items-center gap-3">
                    @if (isAuth)
                    {
                        <span class="text-gray-700 dark:text-gray-200">Signed in as <strong>@userName</strong></span>
                        @if (roles.Count > 0)
                        {
                            <span class="text-gray-500 dark:text-gray-300">(@string.Join(", ", roles))</span>
                        }
                    }
                    else
                    {
                        <span class="text-gray-600 dark:text-gray-300">Welcome</span>
                    }
                    @if (Env.IsDevelopment())
                    {
                        <span class="badge badge-dev">DEV</span>
                    }
                    @RenderSection("Context", required: false)
                </div>
                <div class="flex items-center gap-2">
                    @if (isAuth)
                    {
                        <a href="/Account/Profile" class="btn-outline">Profile</a>
                        <a href="/Account/SignOutUser" class="btn-danger-outline">Sign out</a>
                    }
                    else
                    {
                        <a href="/Account/SignIn" class="btn">Sign in</a>
                    }
                    @if (Env.IsDevelopment())
                    {
                        @if (isAuth)
                        {
                            <a href="/Dev/Impersonate" class="btn-outline">Impersonate</a>
                            <a href="/Dev/Danger" class="btn-danger">Danger</a>
                        }
                        else
                        {
                            <a href="/Dev/Login?fake=true" class="btn-outline">Dev Login</a>
                        }
                    }
                    @RenderSection("Actions", required: false)
                </div>
            </div>
        </div>
    </header>

    <main class="container mx-auto p-4 md:p-6">
        @RenderBody()
    </main>

    @await Html.PartialAsync("~/Views/Shared/Partials/_Footer.cshtml")
</body>
</html>