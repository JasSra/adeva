@model DebtManager.Web.Controllers.TotpSetupVm
@using System.Text.Json
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Security Setup";
    
    var validationErrors = new Dictionary<string, string[]>();
    if (TempData["ValidationErrors"] is string json && !string.IsNullOrWhiteSpace(json))
    {
        validationErrors = JsonSerializer.Deserialize<Dictionary<string, string[]>>(json) ?? new Dictionary<string, string[]>();
    }
}

<div class="max-w-6xl mx-auto bg-white/95 dark:bg-gray-800 rounded-lg shadow-lg p-6 md:p-8">
    <header class="mb-6">
        <h1 class="text-2xl md:text-3xl font-semibold mb-2">@Model.Heading</h1>
        <p class="text-sm text-gray-600 dark:text-gray-400">@Model.SubHeading</p>
    </header>

    @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
    {
        <div class="p-3 bg-red-100 text-red-800 border border-red-300 rounded mb-4" role="alert" aria-live="polite">@err</div>
    }
    @if (TempData["Message"] is string msg && !string.IsNullOrWhiteSpace(msg))
    {
        <div class="p-3 bg-green-100 text-green-800 border border-green-300 rounded mb-4" role="status" aria-live="polite">@msg</div>
    }

    @if (validationErrors.Any())
    {
        <div class="p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg mb-6" role="alert">
            <div class="flex items-start gap-3">
                <svg class="w-5 h-5 text-red-600 dark:text-red-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                </svg>
                <div class="flex-1">
                    <h3 class="text-sm font-semibold text-red-800 dark:text-red-300 mb-1">Please correct the following errors:</h3>
                    <ul class="text-sm text-red-700 dark:text-red-400 space-y-1">
                        @foreach (var error in validationErrors.SelectMany(kvp => kvp.Value))
                        {
                            <li>â€¢ @error</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    <div class="grid gap-6 lg:grid-cols-3">
        <div class="lg:col-span-2 space-y-6">
            @if (Model.ShowTotp)
            {
                <section class="rounded-lg border border-gray-200 dark:border-gray-700 p-4 md:p-6">
                    <div class="flex flex-col lg:flex-row gap-6 items-start">
                        <div class="w-full lg:w-auto text-center">
                            <div class="inline-flex items-center gap-2 text-xs font-semibold uppercase tracking-wider text-blue-700 bg-blue-50 rounded px-2 py-1 border border-blue-200">Step 1</div>
                            <div class="mt-2 font-semibold">Add account to your authenticator</div>
                            <div class="mt-3 inline-block border rounded shadow-sm overflow-hidden">
                                <img src="@Model.QrCodeDataUrl" alt="QR code for authenticator app" class="block w-56 h-56 md:w-64 md:h-64 object-contain bg-white" />
                            </div>
                            <p class="text-xs text-gray-500 mt-2">Scan with Microsoft Authenticator, Google Authenticator, or Authy.</p>
                        </div>

                        <div class="flex-1 w-full">
                            <p class="text-sm text-gray-700 dark:text-gray-300">If you can't scan the code, enter this key in your authenticator app.</p>
                            <label for="authKey" class="sr-only">Authenticator key</label>
                            <div class="mt-2 flex items-stretch gap-2">
                                <input id="authKey" type="text" readonly class="flex-1 font-mono text-sm border rounded px-3 py-2 bg-gray-50 dark:bg-gray-900 dark:border-gray-700" value="@Model.AuthenticatorKey" aria-readonly="true" />
                                <button type="button" id="copyKeyBtn" class="btn-outline text-sm">Copy</button>
                            </div>
                            <details class="mt-2">
                                <summary class="text-xs text-gray-600 cursor-pointer">Show setup URI</summary>
                                <div class="mt-1 font-mono text-xs break-all text-gray-600 dark:text-gray-400">@Model.OtpauthUri</div>
                            </details>

                            <hr class="my-5 border-gray-200 dark:border-gray-700" />

                            <div class="inline-flex items-center gap-2 text-xs font-semibold uppercase tracking-wider text-blue-700 bg-blue-50 rounded px-2 py-1 border border-blue-200">Step 2</div>
                            <div class="mt-2 font-semibold">Enter the 6?digit code from your app</div>

                            <form action="/Security/Complete" method="post" class="mt-3" autocomplete="one-time-code">
                                @Html.AntiForgeryToken()
                                <div class="flex items-end gap-3 flex-wrap">
                                    <div class="flex-1">
                                        <label for="TotpCode" class="block text-sm mb-1">Authenticator code</label>
                                        <input name="TotpCode" id="TotpCode" inputmode="numeric" pattern="[0-9]*" maxlength="6" 
                                               class="@(validationErrors.ContainsKey("TotpCode") ? "border-red-500 focus:ring-red-500" : "border-gray-300") border rounded px-3 py-2 w-40 text-center tracking-widest" 
                                               placeholder="123456" required />
                                        @if (validationErrors.ContainsKey("TotpCode"))
                                        {
                                            <p class="mt-1 text-sm text-red-600 dark:text-red-400">@string.Join(", ", validationErrors["TotpCode"])</p>
                                        }
                                    </div>
                                    <div class="mb-1">
                                        <button type="submit" class="btn">Verify & Enable</button>
                                    </div>
                                </div>
                                <p class="text-xs text-gray-500 mt-2">Codes rotate every 30 seconds. If a code fails, wait for the next code and try again.</p>
                            </form>
                        </div>
                    </div>
                </section>
            }

            @if (Model.ShowSms)
            {
                <section class="rounded-lg border border-gray-200 dark:border-gray-700 p-4 md:p-6 space-y-6">
                    <div>
                        <div class="inline-flex items-center gap-2 text-xs font-semibold uppercase tracking-wider text-blue-700 bg-blue-50 rounded px-2 py-1 border border-blue-200">Step 1</div>
                        <div class="mt-2 font-semibold">Send a verification code to your phone</div>
                        @if (Model.DevMode)
                        {
                            <div class="mb-3 p-3 bg-yellow-50 border border-yellow-200 rounded text-xs text-yellow-800">
                                <strong>ðŸ”§ Dev Mode:</strong> Phone auto-filled. Use code <strong>000000</strong> to verify.
                            </div>
                        }
                        <form action="/Security/SendSms" method="post" class="mt-3 flex flex-col sm:flex-row gap-2 items-stretch sm:items-end">
                            @Html.AntiForgeryToken()
                            <div class="sm:flex-1">
                                <label for="PhoneNumber" class="block text-sm mb-1">Mobile phone number</label>
                                <input type="tel" id="PhoneNumber" name="phoneNumber" value="@Model.PhoneNumber" placeholder="e.g. +61 400 000 000" class="w-full border rounded px-3 py-2" required />
                            </div>
                            <button class="btn">Send code</button>
                        </form>
                        <p class="text-xs text-gray-500 mt-2">Standard SMS rates may apply.</p>
                    </div>

                    <div>
                        <div class="inline-flex items-center gap-2 text-xs font-semibold uppercase tracking-wider text-blue-700 bg-blue-50 rounded px-2 py-1 border border-blue-200">Step 2</div>
                        <div class="mt-2 font-semibold">Enter the code to confirm it's you</div>
                        <form action="/Security/Complete" method="post" class="mt-3" autocomplete="one-time-code">
                            @Html.AntiForgeryToken()
                            <div class="grid sm:grid-cols-2 gap-3 items-end">
                                <div>
                                    <label for="PhoneNumber2" class="block text-sm mb-1">Mobile phone number</label>
                                    <input type="tel" id="PhoneNumber2" name="PhoneNumber" value="@Model.PhoneNumber" placeholder="e.g. +61 400 000 000" 
                                           class="@(validationErrors.ContainsKey("PhoneNumber") ? "border-red-500 focus:ring-red-500" : "border-gray-300") w-full border rounded px-3 py-2" required />
                                    @if (validationErrors.ContainsKey("PhoneNumber"))
                                    {
                                        <p class="mt-1 text-sm text-red-600 dark:text-red-400">@string.Join(", ", validationErrors["PhoneNumber"])</p>
                                    }
                                </div>
                                <div>
                                    <label for="SmsCode" class="block text-sm mb-1">SMS code</label>
                                    <input name="SmsCode" id="SmsCode" inputmode="numeric" pattern="[0-9]*" maxlength="8" value="@Model.DevSmsCode" 
                                           class="@(validationErrors.ContainsKey("SmsCode") ? "border-red-500 focus:ring-red-500" : "border-gray-300") w-full border rounded px-3 py-2 text-center tracking-widest" 
                                           placeholder="Enter code" required />
                                    @if (validationErrors.ContainsKey("SmsCode"))
                                    {
                                        <p class="mt-1 text-sm text-red-600 dark:text-red-400">@string.Join(", ", validationErrors["SmsCode"])</p>
                                    }
                                </div>
                                <div class="sm:col-span-2">
                                    <button type="submit" class="btn">Verify Phone</button>
                                </div>
                            </div>
                        </form>
                        <p class="text-xs text-gray-500 mt-2">Didn't get a code? Re?check the number and tap "Send code" again.</p>
                    </div>
                </section>
            }
        </div>

        <aside class="lg:sticky lg:top-6 h-max rounded-lg border border-gray-200 dark:border-gray-700 p-4 md:p-6 bg-gray-50 dark:bg-gray-900">
            <h2 class="text-base font-semibold mb-2">Why this is required</h2>
            <ul class="list-disc pl-5 space-y-1 text-sm text-gray-700 dark:text-gray-300">
                @foreach (var t in Model.Tips)
                {
                    <li>@t</li>
                }
            </ul>

            <h3 class="text-sm font-semibold mt-5 mb-2">What you'll need</h3>
            <ul class="list-disc pl-5 space-y-1 text-sm text-gray-700 dark:text-gray-300">
                @if (Model.ShowTotp)
                {
                    <li>A phone with an authenticator app installed.</li>
                    <li>Camera access to scan the QR code, or the ability to enter the key manually.</li>
                }
                @if (Model.ShowSms)
                {
                    <li>A mobile phone that can receive SMS messages.</li>
                }
            </ul>

            <h3 class="text-sm font-semibold mt-5 mb-2">Good to know</h3>
            <ul class="list-disc pl-5 space-y-1 text-sm text-gray-700 dark:text-gray-300">
                <li>Keep recovery codes in your password manager.</li>
                <li>You'll be asked for a code when signing in from new devices.</li>
                <li>You can update security settings later from your profile.</li>
            </ul>
        </aside>
    </div>
</div>

<script>
    (function(){
        const btn = document.getElementById('copyKeyBtn');
        if(!btn) return;
        btn.addEventListener('click', function(){
            const input = document.getElementById('authKey');
            if(!input) return;
            input.select();
            input.setSelectionRange(0, 99999);
            try {
                navigator.clipboard.writeText(input.value).then(() => {
                    btn.textContent = 'Copied';
                    setTimeout(() => btn.textContent = 'Copy', 1500);
                });
            } catch(e) {
                document.execCommand('copy');
                btn.textContent = 'Copied';
                setTimeout(() => btn.textContent = 'Copy', 1500);
            }
        });
    })();
</script>
