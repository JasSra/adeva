# Dapr Secret Store Component - Local Development
# For production, use HashiCorp Vault (recommended) or Azure Key Vault
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: saga-secrets
spec:
  type: secretstores.local.file
  version: v1
  metadata:
  - name: secretsFile
    value: "./dapr/secrets.json"
  - name: nestedSeparator
    value: ":"
scopes:
  - saga-orchestrator
  - organization-service
  - debt-service
  - payment-service
  - notification-service
---
# Production - HashiCorp Vault (Recommended)
# Provides multi-cloud secret management with dynamic secrets and rotation
# apiVersion: dapr.io/v1alpha1
# kind: Component
# metadata:
#   name: saga-secrets
# spec:
#   type: secretstores.hashicorp.vault
#   version: v1
#   metadata:
#   - name: vaultAddr
#     value: "https://vault.example.com:8200"
#   - name: vaultToken
#     value: "<vault-token>"  # Or use vaultTokenMountPath for file-based token
#   - name: vaultTokenMountPath
#     value: "/var/run/secrets/vault-token"
#   - name: caCert
#     value: "<ca-certificate>"
#   - name: caPath
#     value: "/etc/vault/ca"
#   - name: skipVerify
#     value: "false"
#   - name: enginePath
#     value: "secret"  # KV v2 engine path
#   - name: vaultValueType
#     value: "map"
# scopes:
#   - saga-orchestrator
#   - organization-service
#   - debt-service
#   - payment-service
#   - notification-service
---
# Alternative - Azure Key Vault
# Provides secure, centralized secret management for Azure-only deployments
# apiVersion: dapr.io/v1alpha1
# kind: Component
# metadata:
#   name: saga-secrets
# spec:
#   type: secretstores.azure.keyvault
#   version: v1
#   metadata:
#   - name: vaultName
#     value: "<your-keyvault-name>"
#   - name: azureTenantId
#     value: "<your-tenant-id>"
#   - name: azureClientId
#     value: "<your-client-id>"
#   - name: azureClientSecret
#     value: "<your-client-secret>"
# scopes:
#   - saga-orchestrator
#   - organization-service
#   - debt-service
#   - payment-service
#   - notification-service
